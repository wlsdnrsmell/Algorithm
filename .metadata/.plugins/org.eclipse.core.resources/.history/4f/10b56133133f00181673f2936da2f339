/**
 * 
 */
package etc;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 * @author ginTonic
 * @Title 
 * 2018. 4. 13.
 */
public class No2602 {

	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String a = br.readLine();
		String b = br.readLine();
		String c = br.readLine();

		int k = a.length(); 
		//[몇번째열][해당돌다리를몇번째][몇번째행]
		int d[][][] = new int[101][21][2];
		int n = b.length();
		for(int i=0; i<n; i++) {
			if(b.charAt(i)==a.charAt(0)) d[i][0][0] ++;
			if(c.charAt(i)==a.charAt(0)) d[i][0][1] ++;
		}
		for(int i=0; i<k; i++) {
			for(int i=0; i<n; i++) {
				
			}
		}
		
		
	}
	//flag = 1 직전에 악마다리
	//flag = 2 직전에 천사다리
	private static int sol(int[][] d, int i, int idx, int flag) {
		System.out.println("i "+i+" idx "+idx+" flag "+flag);
		if(idx>=0 && i>0) {
			if(flag==2) {
				System.out.println("엔젤");
				if(arrDevil[i]==str[idx])
					d[i][1] = sol(d, i-1, idx-1, 1) + d[i-1][0];
				else
					d[i][0] += sol(d, i-1, idx, 1);	
			} else {
				System.out.println("데빌");
				if(arrAngel[i]==str[idx])
					d[i][2] = sol(d, i-1, idx-1, 2) + d[i-1][0];
				else
					d[i][0] += sol(d, i-1, idx, 2);
			}
		}
		//return d[i][1] + d[i][2] + d[i][0];
		if(idx==0) return 1;
		else return 0;
	}

}
