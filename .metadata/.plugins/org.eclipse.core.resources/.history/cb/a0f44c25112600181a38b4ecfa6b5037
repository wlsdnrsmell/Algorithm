/**
 * 
 */
package bfs;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.TreeSet;

/**
 * @author jinwook.im
 * @Titile 물통
 * 2018. 3. 12.
 */
public class No2251 {

	/**
	 * @param args
	 */
	class Pair implements Comparable<Pair> {
		final int first;
		final int second;
		/**
		 * @param first
		 * @param second
		 */
		public Pair(int first, int second) {
			this.first = first;
			this.second = second;
		}
		/* (non-Javadoc)
		 * @see java.lang.Comparable#compareTo(java.lang.Object)
		 */
		@Override
		public int compareTo(Pair pair) {
			if(this.first<pair.first)
				return -1;
			if(this.first>pair.first)
				return 1;
			if(this.second<pair.second)
				return -1;
			if(this.second>pair.second)
				return 1;
			return 0;
		}
		public boolean equals(Object object) {
			if(object instanceof Pair) {
				Pair pair = (Pair) object;
				return this.first==pair.first&&this.second==pair.second
			}
			return false;
		}
	}
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int bA = sc.nextInt(), bB = sc.nextInt(), bC = sc.nextInt();
		Map<Integer, Integer> m = new HashMap<Integer, Integer>();
		boolean[][] check = new boolean[3][3];
		TreeSet<Integer> ans = new TreeSet<Integer>();
		
		m.put(bA,0);m.put(bB, 0); check[0][0]=true;
		Queue<Map> q = new LinkedList<Map>();
		q.offer(m);
		
		while(!q.isEmpty()) {
			int x = (int) q.peek().get(bA); int y = (int)q.poll().get(bB);
			int z = bC - x- y;
			//x->y
			//x->z
			//y->x
			//y->z
			//z->x
			//z->y
			
		}
	}

}
